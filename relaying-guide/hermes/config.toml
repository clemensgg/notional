# The global section has parameters that apply globally to the relayer operation.
[global]

# Specify the strategy to be used by the relayer. Default: 'packets'
# Two options are currently supported:
#   - 'all': Relay packets and perform channel and connection handshakes.
#   - 'packets': Relay packets only.
strategy = 'packets'

# Enable or disable the filtering mechanism. Default: 'false'
# Valid options are 'true', 'false'.
# Currently Hermes supports two filters:
# 1. Packet filtering on a per-chain basis; see the chain-specific
#   filter specification below in [chains.packet_filter].
# 2. Filter for all activities based on client state trust threshold; this filter
#   is parametrized with (numerator = 1, denominator = 3), so that clients with
#  thresholds different than this will be ignored.
# If set to 'true', both of the above filters will be enabled.
filter = true

# Specify the verbosity for the relayer logging output. Default: 'info'
# Valid options are 'error', 'warn', 'info', 'debug', 'trace'.
log_level = 'info'

# Parametrize the periodic packet clearing feature.
# Interval (in number of blocks) at which pending packets
# should be eagerly cleared. A value of '0' will disable
# periodic packet clearing. Default: 100
clear_packets_interval = 10


# The REST section defines parameters for Hermes' built-in RESTful API.
# https://hermes.informal.systems/rest.html
[rest]

# Whether or not to enable the REST service. Default: false
enabled = true

# Specify the IPv4/6 host over which the built-in HTTP server will serve the RESTful
# API requests. Default: 127.0.0.1
host = '127.0.0.1'

# Specify the port over which the built-in HTTP server will serve the restful API
# requests. Default: 3000
port = 3000


# The telemetry section defines parameters for Hermes' built-in telemetry capabilities.
# https://hermes.informal.systems/telemetry.html
[telemetry]

# Whether or not to enable the telemetry service. Default: false
enabled = true

# Specify the IPv4/6 host over which the built-in HTTP server will serve the metrics
# gathered by the telemetry service. Default: 127.0.0.1
host = '127.0.0.1'

# Specify the port over which the built-in HTTP server will serve the metrics gathered
# by the telemetry service. Default: 3001
port = 3001

# This section specifies the filters for policy based relaying.
# Default: no policy/ filters
# The section is ignored if the global 'filter' option is set to 'false'.
# If the global 'filter' option is set to 'true' and this section is missing then no filtering is performed for this chain.
# Only packet filtering based on channel identifier can be specified.
# A channel filter has two fields:
# 1. `policy` - one of two types are supported:
#       - 'allow': permit relaying _only on_ the port/channel id in the list below,
#       - 'deny': permit relaying on any channel _except for_ the list below.
# 2. `list` - the list of channels specified by the port and channel identifiers.
#
# Example configuration of a channel filter, denying packet relaying on channel with port ID 'transfer' and channel ID 'channel-0':
#
# [chains.packet_filter]
# policy = 'deny'
# list = [
#   ['transfer', 'channel-0'],
# ]

 
[[chains]]
id = 'osmosis-1'
rpc_addr = 'http://localhost:2001'
grpc_addr = 'http://localhost:2002'
websocket_addr = 'ws://localhost:2001/websocket'
rpc_timeout = '10s'
account_prefix = 'osmo'
key_name = 'osmosis'
store_prefix = 'ibc'
max_gas = 30000000
gas_price = { price = 0.000, denom = 'uosmo' }
gas_adjustment = 0.1
clock_drift = '5s'
trusting_period = '10days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [
   ['transfer', 'channel-0'],['transfer', 'channel-1'],['transfer', 'channel-2'],['transfer', 'channel-3'],['transfer', 'channel-6'],['transfer', 'channel-15'],['transfer', 'channel-37']
 ]

[[chains]]
id = 'akashnet-2'
rpc_addr = 'http://127.0.0.1:2021'
websocket_addr = 'ws://127.0.0.1:2021/websocket'
grpc_addr = 'http://127.0.0.1:2022'
rpc_timeout = '10s'
account_prefix = 'akash'
key_name = 'akash'
store_prefix = 'ibc'
max_gas = 2000000
gas_price = { price = 0.001, denom = 'uakt' }
gas_adjustment = 0.1
clock_drift = '5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [
#   ['transfer', 'channel-17'],['transfer', 'channel-11'],['transfer', 'channel-23'],['transfer', 'channel-22'],['transfer', 'channel-20'],['transfer', 'channel-9'],['transfer', 'channel-18']
 ]

[[chains]]
id = 'sentinelhub-2'
rpc_addr = 'http://127.0.0.1:2031'
grpc_addr = 'http://127.0.0.1:2032'
websocket_addr = 'ws://127.0.0.1:2031/websocket'
account_prefix = 'sent'
key_name = 'sentinel'
store_prefix = 'ibc'
max_gas = 2000000
gas_price = { price = 0.001, denom = 'udvpn' }
gas_adjustment = 0.1
clock_drift = '5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [
#   ['transfer', 'channel-0'],['transfer', 'channel-12']
 ]


[[chains]]
id = 'irishub-1'
rpc_addr = 'http://127.0.0.1:2121'
grpc_addr = 'http://127.0.0.1:2122'
websocket_addr = 'ws://127.0.0.1:2121/websocket'
rpc_timeout = '10s'
account_prefix = 'iaa'
key_name = 'iris'
store_prefix = 'ibc'
max_gas = 2000000
max_tx_size = 1800000
gas_price = { price = 0.001, denom = 'uiris' }
gas_adjustment = 0.1
clock_drift ='5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [
#   ['transfer', 'channel-12'],['transfer', 'channel-3']
 ]

#[[chains]]
#id = 'dig-testnet-1'
#rpc_addr = 'http://127.0.0.1:23394'
#grpc_addr = 'http://127.0.0.1:5473'
#websocket_addr = 'ws://127.0.0.1:23394/websocket'
#rpc_timeout = '10s'
#account_prefix = 'dig'
#key_name = 'dig'
#store_prefix = 'ibc'
#max_gas = 2000000
#gas_price = { price = 0.001, denom = 'dig' }
#gas_adjustment = 0.1
#clock_drift ='5s'
#trusting_period = '14days'
#trust_threshold = { numerator = '1', denominator = '3' }


[[chains]]
id = 'regen-1'
rpc_addr = 'http://127.0.0.1:2061'
grpc_addr = 'http://127.0.0.1:2062'
websocket_addr = 'ws://127.0.0.1:2061/websocket'
account_prefix = 'regen'
key_name = 'regen'
store_prefix = 'ibc'
max_gas = 2000000
max_tx_size = 180000
gas_price = { price = 0.001, denom = 'uregen' }
gas_adjustment = 0.1
clock_drift ='5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [
#   ['transfer', 'channel-12'],['transfer', 'channel-3']
 ]



[[chains]]
id = 'cosmoshub-4'
rpc_addr = 'http://127.0.0.1:2011'
grpc_addr = 'http://127.0.0.1:2012'
websocket_addr = 'ws://127.0.0.1:2011/websocket'
rpc_timeout = '10s'
account_prefix = 'cosmos'
key_name = 'cosmos'
store_prefix = 'ibc'
max_tx_size = 180000
max_gas = 3000000
gas_price = { price = 0.001, denom = 'uatom' }
gas_adjustment = 0.1
clock_drift ='5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [
#   ['transfer', 'channel-182'],['transfer', 'channel-141'],['transfer', 'channel-186'],['transfer', 'channel-190'],['transfer', 'channel-187'],['transfer', 'channel-202']
 ]


[[chains]]
id = 'emoney-3'
rpc_addr = 'http://127.0.0.1:2171'
grpc_addr = 'http://127.0.0.1:2172'
websocket_addr = 'ws://127.0.0.1:2171/websocket'
rpc_timeout = '10s'
account_prefix = 'emoney'
key_name = 'emoney'
store_prefix = 'ibc'
max_tx_size = 180000
max_gas = 3000000
gas_price = { price = 0.01, denom = 'ungm' }
gas_adjustment = 2
clock_drift ='70s'
trusting_period = '10days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [
   ['transfer', 'channel-0'],['transfer', 'channel-1'],['transfer', 'channel-2']
 ]



[[chains]]
id = 'iov-mainnet-ibc'
rpc_addr = 'http://127.0.0.1:2071'
grpc_addr = 'http://127.0.0.1:2072'
websocket_addr = 'ws://127.0.0.1:2071/websocket'
rpc_timeout = '10s'
account_prefix = 'star'
key_name = 'iov'
max_tx_size = 450000
store_prefix = 'ibc'
max_gas = 2000000
gas_price = { price = 1.0, denom = 'uiov' }
gas_adjustment = 0.1
clock_drift ='5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [

 ]

[[chains]]
id = 'core-1'
rpc_addr = 'http://127.0.0.1:2081'
grpc_addr = 'http://127.0.0.1:2082'
websocket_addr = 'ws://127.0.0.1:2081/websocket'
rpc_timeout = '10s'
account_prefix = 'persistence'
key_name = 'persistence'
store_prefix = 'ibc'
max_gas = 2000000
max_tx_size = 180000
gas_price = { price = 0.001, denom = 'uxprt' }
gas_adjustment = 0.1
clock_drift ='5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [

 ]

[[chains]]
id = 'crypto-org-chain-mainnet-1'
rpc_addr = 'http://127.0.0.1:2041'
grpc_addr = 'http://127.0.0.1:2042'
websocket_addr = 'ws://127.0.0.1:2041/websocket'
rpc_timeout = '10s'
account_prefix = 'cro'
key_name = 'crypto'
store_prefix = 'ibc'
max_gas = 2000000
max_tx_size = 450000
gas_price = { price = 0.05, denom = 'basecro' }
gas_adjustment = 0.1
clock_drift ='5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [

 ]

[[chains]]
id = 'sifchain-1'
rpc_addr = 'http://127.0.0.1:2111'
grpc_addr = 'http://127.0.0.1:2112'
websocket_addr = 'ws://127.0.0.1:2111/websocket'
rpc_timeout = '10s'
account_prefix = 'sif'
key_name = 'sif'
store_prefix = 'ibc'
max_gas = 2000000
gas_price = { price = 0.001, denom = 'rowan' }
gas_adjustment = 0.1
clock_drift ='5s'
trusting_period = '14days'
trust_threshold = { numerator = '1', denominator = '3' }
[chains.packet_filter]
policy = 'allow'
list = [

 ]
